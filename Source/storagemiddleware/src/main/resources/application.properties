#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.IntegerSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.consumer.properties.spring.json.trusted.packages="org.rug.scalablecomputing.temperatures.simulator.domain.Measurement"
#spring.jackson.serialization.write-dates-as-timestamps=false
#spring.cloud.stream.kafka.binder.brokers=${KAFKA_BOOTSTRAP_SERVERS:localhost}
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS_WITH_IP:localhost:9092}
spring.kafka.consumer.group-id=storagemiddleware
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.IntegerSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.data.cassandra.keyspace-name=temperatures
kafka_input_topic=${KAFKA_INPUT_TOPIC:temperatures-in}
spring.data.cassandra.contact-points=${CASSANDRA_SEEDS:localhost}
spring.data.cassandra.port=${CASSANDRA_PORT:30042}
partitions=${KAFKA_TOPIC_PARTITIONS:1}
replicas=${KAFKA_TOPIC_REPLICAS:1}