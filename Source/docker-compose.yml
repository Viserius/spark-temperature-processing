version: "2.1"
services:

  # --- CASSANDRA CLUSTER
  cassandra1:
    image: soelmanm/scalablecomputing:cassandra
    ports:
      - "9042:9042"
    hostname: cassandra1
    volumes:
      - "cassandradata1:/var/lib/cassandra"
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]  
    environment:
      - "CASSANDRA_SEEDS=cassandra1,cassandra2,cassandra3"
      - "HEAP_NEWSIZE=1M"
      - "MAX_HEAP_SIZE=512M"
    mem_limit: 1024M

  cassandra2:
    image: soelmanm/scalablecomputing:cassandra
    ports:
      - "9043:9042"
    hostname: cassandra2
    volumes:
      - "cassandradata2:/var/lib/cassandra"
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]  
    environment:
      - "CASSANDRA_SEEDS=cassandra1,cassandra2,cassandra3"
      - "HEAP_NEWSIZE=1M"
      - "MAX_HEAP_SIZE=512M"
    mem_limit: 1024M

  cassandra3:
    image: soelmanm/scalablecomputing:cassandra
    ports:
      - "9044:9042"
    hostname: cassandra3
    volumes:
      - "cassandradata3:/var/lib/cassandra"
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]  
    environment:
      - "CASSANDRA_SEEDS=cassandra1,cassandra2,cassandra3"
      - "HEAP_NEWSIZE=1M"
      - "MAX_HEAP_SIZE=512M"
    mem_limit: 1024M
  # --- END CASSANDRA CLUSTER

  # --- Local Kafka Cluster --- #
  zoo1:
    image: confluentinc/cp-zookeeper:5.3.0
    ports:
      - '31000:31000'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_JMX_HOSTNAME: "localhost"
      KAFKA_JMX_PORT: 31000

  kafka1:
    image: confluentinc/cp-enterprise-kafka
    ports:
      - '9092:9092'
      - '31001:31001'
    depends_on:
      - zoo1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zoo1:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'false'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      KAFKA_JMX_HOSTNAME: "localhost"
      KAFKA_JMX_PORT: 31001

  kafka-schema-registry:
    image: confluentinc/cp-schema-registry
    hostname: kafka-schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka1:29092
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    depends_on:
      - zoo1
      - kafka1

  schema-registry-ui:
    image: landoop/schema-registry-ui
    hostname: kafka-schema-registry-ui
    ports:
      - "8001:8000"
    environment:
      SCHEMAREGISTRY_URL: http://kafka-schema-registry:8081/
      PROXY: "true"
    depends_on:
      - kafka-schema-registry

  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest
    hostname: kafka-rest-proxy
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8081/
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka1:29092
    depends_on:
      - zoo1
      - kafka1
      - kafka-schema-registry

  kafka-topics-ui:
    image: landoop/kafka-topics-ui
    hostname: kafka-topics-ui
    ports:
      - "8000:8000"
    environment:
      KAFKA_REST_PROXY_URL: "http://kafka-rest-proxy:8082/"
      PROXY: "true"
    depends_on:
      - zoo1
      - kafka1
      - kafka-schema-registry
      - kafka-rest-proxy
    # --- END Local Kafka Cluster

    # --- Simulator
  simulator:
    build:
      context: simulator
    environment: 
      KAFKA_BOOTSTRAP_SERVERS: "kafka1:29092"
      KAFKA_TOPIC_PARTITIONS: "1"
      KAFKA_TOPIC_REPLICAS: "1"
      ONLY_FAKE_DATASETS: "true"
      THREADS: "1"
      FIXED_DELAY_IN_MS: "1000"
    depends_on: 
      - zoo1
      - kafka1
      - cassandra1
      - cassandra2
      - cassandra3
    # --- End Simulator

  # --- Storage Middleware
  storagemiddleware:
    build:
      context: storagemiddleware
    environment: 
      - "KAFKA_BOOTSTRAP_SERVERS=kafka1"
      - "KAFKA_INPUT_TOPIC=temperatures-in"
      - "CASSANDRA_SEEDS=cassandra1,cassandra2,cassandra3"
      - "KAFKA_TOPIC_PARTITIONS=1"
      - "KAFKA_TOPIC_REPLICAS=1"
    depends_on: 
      - kafka1
      - cassandra1
      - cassandra2
      - cassandra3
  # --- End of Storage Middleware

volumes:
  cassandradata1:
  cassandradata2:
  cassandradata3: